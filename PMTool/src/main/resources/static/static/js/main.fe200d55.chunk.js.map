{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/secureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","react_router_dom","to","concat","onClick","bind","Component","propType","PropTypes","func","isRequired","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsNotAuthenticated","userIsAuthenticated","fullName","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","react_router","assign","Route","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","Layout_Header","exact","path","secureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe200d55.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for Backlog actions\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto font-weight-bold\">\r\n                {project.projectIdentifier}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8 font-weight-bold\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propType = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info font-weight-bold\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center font-weight-bold\">\r\n                Projects\r\n              </h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n\r\n    // store token in localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n\r\n    // set token in header ***\r\n    setJWTToken(token);\r\n\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n\r\n    //dispatch to securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link text-white font-weight-bold\"\r\n              to=\"/register\"\r\n            >\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link text-white font-weight-bold\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link fas fa-clipboard-list text-white font-weight-bold\"\r\n              to=\"/dashboard\"\r\n            >\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link text-white font-weight-bold\"\r\n              to=\"/dashboard\"\r\n            >\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link text-white font-weight-bold\"\r\n              to=\"/\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm bg-purple mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand text-white font-weight-bold\" to=\"/\">\r\n            Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(UpdateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project Form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-dark font-weight-bold\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-dark font-weight-bold\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-dark font-weight-bold\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          {project_task.projectSequence} | Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n              project_task.projectSequence\r\n            }`}\r\n            className=\"btn btn-primary font-weight-bold\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4 font-weight-bold\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task: ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white font-weight-bold\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              //insert project task here\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white font-weight-bold\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n            {\r\n              //<!-- SAMPLE PROJECT TASK STARTS HERE -->\r\n              //<!-- SAMPLE PROJECT TASK ENDS HERE -->\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white font-weight-bold\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n            {\r\n              //<!-- SAMPLE PROJECT TASK STARTS HERE -->\r\n              //<!-- SAMPLE PROJECT TASK ENDS HERE -->\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div\r\n              className=\"alert alert-info text-center font-weight-bold\"\r\n              role=\"alert\"\r\n            >\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  //on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Project Management Tool</h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own.\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions.js\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/secureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //public routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            {\n              //Private routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}